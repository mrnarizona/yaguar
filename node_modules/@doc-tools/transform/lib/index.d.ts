import { LogLevels } from './log';
import { SanitizeOptions } from './sanitize';
import { MarkdownItPluginCb } from './plugins/typings';
import type { HighlightLangMap, Heading } from './typings';
interface OutputType {
    result: {
        html: string;
        title?: string;
        headings: Heading[];
        assets?: unknown[];
        meta?: object;
    };
    logs: Record<LogLevels, string[]>;
}
interface OptionsType {
    vars?: Record<string, string>;
    path?: string;
    extractTitle?: boolean;
    needTitle?: boolean;
    allowHTML?: boolean;
    linkify?: boolean;
    breaks?: boolean;
    conditionsInCode?: boolean;
    disableLiquid?: boolean;
    leftDelimiter?: string;
    rightDelimiter?: string;
    isLiquided?: boolean;
    needToSanitizeHtml?: boolean;
    sanitizeOptions?: SanitizeOptions;
    needFlatListHeadings?: boolean;
    plugins?: MarkdownItPluginCb<any>[];
    highlightLangs?: HighlightLangMap;
    root?: string;
    [x: string]: unknown;
}
declare function transform(originInput: string, opts?: OptionsType): OutputType;
export = transform;
declare namespace transform {
    type Options = OptionsType;
    type Output = OutputType;
}
